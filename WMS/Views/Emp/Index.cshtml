@*@model IEnumerable<WMSModel.Emp>*@
@model PagedList.IPagedList<WMS.Models.EmpView>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Employees";
}
<p>
</p>
<div>
    <div>
      <form class ="form-inline" role="form">
          <div class="form-group"> <h2>Employees</h2> </div>
          <div class="form-group CreateBtnMargin"><p>@Html.ActionLink("Create New", "Create",null,new { @class = "btn btn-xs btn-success" })</p></div>
          <div class="form-group pull-right"  style="margin-top:15px">
              @using (Html.BeginForm("Index", "Emp", FormMethod.Get))
                {<p><span style="font-weight:bold">Find: </span>  @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" } )  
                    <input class="btn btn-sm btn-success " type="submit" value="Search" /></p>}
          </div> 
      </form>  
       
    </div>

  <div>
    <div class="table-responsive">
        <table class="table table-bordered table-hover  table-condensed">
            <tr class="table-header">
                <th style="width:6%">
                   Photo
                </th>
                <th style="width:90px">
                   Emp No
                </th>
                <th>
                    @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })
                </th>
                <th>
                    CardNo
                </th>
                <th>
                    CNIC No
                </th>
                <th>
                     @Html.ActionLink("Designation", "Index", new { sortOrder = ViewBag.DesigSortParm })
                </th>
                <th>
                     @Html.ActionLink("Unit", "Index", new { sortOrder = ViewBag.SectionSortParm })
                </th>
                 <th>
                     @Html.ActionLink("Group", "Index", new { sortOrder = ViewBag.DepartmentSortParm })
                </th>
                <th>
                    Status
                </th>
                <th style="width:90px">Edit|View|Delete</th>
            </tr>
            @foreach (var item in Model) {
            <tr>
                <td>
                    <img src="/PPAF/Emp/RetrieveImage/@item.EmpID" alt="" height=58 width=55/>
                </td>
                <td>
                   @Html.DisplayFor(modelItem => item.EmpNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmpName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CardNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NicNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DesignationName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SectionName)
                </td>                            
                <td>
                    @Html.DisplayFor(modelItem => item.DeptName)
                </td>
                
                 <td>
                     @if (item.Status==true)
                    {
                        <div>Active</div>
                    }
            
                    else
                    {
                        <div>Inactive</div>
                    }
                </td>
                <td>
                    @Html.ActionLink(" ", "Edit", new { id=item.EmpID } , new { @class = "glyphicon glyphicon-pencil btn btn-warning btn-xs btn-EditViewDelete" })
                    @Html.ActionLink(" ", "Details", new { id = item.EmpID }, new { @class = "glyphicon glyphicon-list btn btn-info btn-xs btn-EditViewDelete" }) 
                    @Html.ActionLink(" ", "Delete", new { id=item.EmpID }, new { @class = "glyphicon glyphicon-trash btn btn-danger btn-xs btn-EditViewDelete" })
                </td>
            </tr>
        }
        </table>
    </div>
    </div>

</div>
 <div class="form-inline">
          <div class="form-group ">@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))</div>
          <div class="form-group pull-right">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
     </div>


